######################################################################################

存commandline的数据
(| grep At -A 5(存5行) > test1.txt)
./py_cp.py > /home/williamwoo/test-B4-WP11.txt

######################################################################################
连接server:
复制电脑上文件到server (Windows cmd)：

scp C:\Users\zheny\Desktop\xxxx zhenyu@10.97.176.132:~/gpml-matlab-WW

复制server上文件到电脑(Windows cmd):
scp zhenyu@10.97.176.132:~/gpml-matlab-WW/xxxx.file C:\Users\zheny\Desktop

打开screen:
screen -S matlab

查看进程：
top
ps aux | less

查看memory使用情况：
free -m

######################################################################################

给3DM IMU USB权限:
sudo chmod a+rw /dev/ttyACM0

给VN-100 IMU USB权限:
sudo chmod a+rw /dev/ttyUSB0
VN-100 IMU 调整为: serial_baud: 921600

######################################################################################

收集磁场数据：
自己电脑:
1. cd catkin_ws/devel
2. source setup.bash
3. roslaunch xsens_mti_driver display.launch

######################################################################################

明星电脑:
1. sudo gedit ~/.bashrc --> 
   uncomment: export PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages
   comment out:  # export PYTHONPATH=/usr/local/lib/python2.7/dist-packages/:$PYTHONPATH 
2. source ~/.bashrc
3. cd zy_ws/devel
   cd zy_ws/devel_isolated
4. source setup.bash
5. roslaunch xsens_mti_driver xsens_driver.launch

######################################################################################

hdl_localization中如何同时显示两个机器人的trajectory：
1. 先跑hdl_localization的主程序，rviz以及第一个rosbag，确认没有问题之后，再跑：rosbag play --clock /media/williamwoo/Samsung_T5/BAGS/husky2-IJRR-_2020-07-24-23-45-22.bag --topic /husky2_robot_pose /clock:=/clock2
2. 发布从husky2_robot_pose到map的static transform: rosrun tf static_transform_publisher 0.0 0.0 0.0 0.0 0.0 0.0 husky2 map 100
3. 在新的窗口中，/home/williamwoo/catkin_ws_hdl/src/hdl_graph_slam/scripts下，跑：rosrun hdl_graph_slam republish_pose.py

######################################################################################

磁场包转rosbag:
1. cd catkin_ws/devel
2. source setup.bash
3. rosrun rosbag_to_csv rosbag_to_csv.py

######################################################################################

去掉特定的rostopic:
To end up with a new bag file that excludes the /tf topic:
rosbag filter file.bag file-no-tf.bag "topic != '/tf'"


或remove /tf :
rosbag filter /home/williamwoo/husky2-pose-07-08-interfer-way10.bag /home/williamwoo/husky2-pose-07-08-interfer-way10-no-tf.bag 'topic == "/scan" or topic == "/husky2_robot_pose" or topic == "/imu/data"'


!!!把IMU翻转过来，然后跑 roslaunch launch_scripts start_robot.launch，跑出来的包就 AMCL和Cartographer(去掉/tf)都能用！(Husky#2 上成功跑通)

################################  Cartographer  #######################################
需要: /scan, /imu/data

Root: /home/williamwoo/new_ws/install_isolated
录包(/imu/data, /scan, /husky_robot_pose, laser和imu header不要/)

Build the .pbstream: 
roslaunch cartographer_ros offline_backpack_2d.launch bag_filenames:=${HOME}/Downloads/b2-2016-04-05-14-44-52.bag


Pure Localization(只需要/scan + /imu/data, 去掉laser前的/): 
1. gedit ~/.bashrc --> source ~/new_ws/devel_isolated/setup.bash
2. cd new_ws/devel_isolated --> source setup.bash
3. roslaunch cartographer_ros demo_backpack_2d_localization.launch \
   (load_state_filename:=/xxx.bag.pbstream \)
   bag_filename:=/xxx.bag
                       
                       
Set initial pose:
rosrun cartographer_ros cartographer_start_trajectory ... -configuration_directory '/home/williamwoo/new_ws/install_isolated/share/cartographer_ros/configuration_files' -configuration_basename 'backpack_2d_localization.lua' -initial_pose '{to_trajectory_id = 0, relative_pose = { translation = { -4, 0, 0}, rotation = {0., 0.,0 } } }'


#旧 rosrun cartographer_ros cartographer_start_trajectory ... -configuration_directory '/home/williamwoo/catkin_ws/src/cartographer_ros/cartographer_ros/configuration_files' -configuration_basename 'backpack_2d_localization.lua' -initial_pose '{to_trajectory_id = 0, relative_pose = { translation = { -4, 0, 0}, rotation = {0., 0.,0 } } }'

Normal SLAM:
roslaunch cartographer_ros demo_backpack_2d.launch bag_filename:=/xxx.bag
######################################################################################


###################################  AMCL  ###########################################
需要: /scan, /tf
AMCL( map <-- odom <-- base_link )

录包(/imu/data, /scan, /tf):
1. roslaunch launch_scripts start_robot.launch
2. --> ~/ros_bags/zhenyu/ --> ./record-tf-scan.sh


重定位:
!!! 需要开一个全局roscore，然后 rosparam set /use_sim_time true --> rosparam get /use_sim_time

(1. cd scan_matcher_ws/src/scan_tools --> roslaunch husky_navigation amcl.launch) 
1. cd scan_matcher_ws/devel_isolated --> source setup.bash
2. roslaunch /home/williamwoo/Backup/amcl_new.launch
3. rosbag play --clock ~/..../xxx.bag
4. rviz
5. cd scan_matcher_ws/devel_isolated --> source setup.bash --> rosservice call /global_localization 

添加 AMCL 背景图:
sudo cp -R /home/williamwoo/xxxx.pgm /opt/ros/kinetic/share/husky_navigation/maps


Husky实时定位:
1. roslaunch launch_scripts start_robot.launch
2. roslaunch nav2d_setup_launches amcl.launch
3. 自己电脑终端 --> rviz

Gmapping建图:
1. roslaunch nav2d_setup_launches init_2d_slam.launch
2. 保存地图: rosrun map_server map_saver -f xxx(map_name) 会保存到/Home 目录下
######################################################################################


################################  Hector SLAM  ########################################
Hector SLAM (S1-B4环境记得用hector slam的专属rosbag):
1. roslaunch hector_slam_launch tutorial.launch
2. rosbag play --clock xxxx.bag
3. 保存地图: rosrun map_server map_saver -f xxx(map_name) 会保存到/Home 目录下

修改launch file:
sudo gedit /opt/ros/kinetic/share/hector_slam_launch/launch/tutorial.launch --> true 回放bag

改 map size:
sudo gedit /opt/ros/kinetic/share/hector_mapping/launch/mapping_default.launch
S1-B4: "map_size"="3072"

<arg name="base_frame" default="base_link"/>
<arg name="odom_frame" default="odom"/>

#######################################################################################


tf_echo:
# Localization Error:
rosrun tf tf_echo /map /odom

# Distance travelled:
rosrun tf tf_echo /odom /base_link

######################################################################################


################################  HDL-Localization  ##################################
rosparam set use_sim_time true

(1. Change the .pcd(map) file in the hdl_localization.launch)
1. roslaunch hdl_localization hdl_localization.launch (/home/williamwoo/catkin_ws_hdl/src/hdl_localization/launch/hdl_localization.launch)  
2. roscd hdl_localization/rviz --> rviz -d hdl_localization.rviz
3. rosbag play --clock ...bag --topic /velodyne_points /imu/data (减速播放 -r 0.3)

.pcd(map) file是由LeGO-LOAM生成并transform的： /home/williamwoo/lego_loam_ws/src/LeGO-LOAM/LeGO-LOAM/src/mapOptmization.cpp

################################ LeGO-LOAM ################################
1. roslaunch lego_loam run.launch
2. rosbag play *.bag --clock --topic /velodyne_points /imu/data
3. 生成的地图在: /williamwoo/tmp

######################################################################################



################################  DRL-Localization  ##################################
roscore
rosparam set /use_sim_time true

明星电脑:
1. cd catkin_ws_drl/devel_release --> source setup.bash
   roslaunch pose_to_tf_publisher odom.launch (提供 odom --> base_link 的tf，具体参数可在 odom.launch 中修改)
   roslaunch dynamic_robot_localization dynamic_robot_localization_system.launch
2. rosrun map_server map_server /catkin_ws_drl/src/mymap.yaml
3. rviz 
4. rosbag play --clock /.../.../

######################################################################################



################################  MRPT Localization  ##################################
1. 用 image2gridmap 生成.gridmap地图: 
cd /opt/ros/kinetic/share/mrpt_localization/launch 
(cd catkin_ws/src/mrpt_navigation/mrpt_localization/launch)
不需要launch Rviz

image2gridmap --cx -24.37 --cy -18.85 -i /home/williamwoo/catkin_ws/src/mrpt_navigation/mrpt_localization/tutorial/mymap.pgm -r 0.05
2. rosparam set /use_sim_time true
3. roslaunch zhenyu.launch
4. rosbag play --clock /.../...mrpt.bag

用 DRL-localization 生成odom->base_link的/tf，然后重新录mprt的rosbag(带odom->base_link /tf的)
1. cd catkin_ws_drl/devel_release --> source setup.bash
   roslaunch pose_to_tf_publisher odom.launch
   (roslaunch dynamic_robot_localization dynamic_robot_localization_system.launch)
2. (rosrun map_server map_server /catkin_ws_drl/src/mymap.yaml)
3. rosbag record /tf /scan /imu/data /imu/data2 /husky_velocity_controller/odom
4. rqt check /tf

#######################################################################################


################################  LaMa ROS Localization  ##############################
rosparam set /use_sim_time true
1. cd catkin_ws_iris_lama/devel source setup.bash
rosrun iris_lama_ros loc2d_ros scan:=/scan
2. rosrun map_server map_server /opt/ros/kinetic/share/husky_navigation/maps/mymap.yaml
3. rviz
4. rosbag play --clock /.../...mrpt.bag
5. 触发global localization： cd catkin_ws_iris_lama/devel source setup.bash --> rosservice call /global_localization 

#######################################################################################



###################################  LOAM  ###########################################

1. roslaunch loam_velodyne loam_velodyne.launch
2. rosbag play ~/xxxx.bag

Xsens launch:
roslaunch xsens_mti_driver display.launch

MT Manager(on Ubuntu)



#######################################################################################
scan match / orientation adjustment(旋转车头):
cd /home/williamwoo/lego_loam_ws/src/laser_values/src--> ./scan.py 
#######################################################################################


######################################################################################

######################################################################################


######################################################################################
Pixracer(Autopilot):
roslaunch mavros px4.launch
######################################################################################


######################################################################################
Velodyne change range:
1. roscd nav25d_setup_launches/launch --> vim nav25d_setup_loam.launch
2. roscd launch_scripts/launch --> vim init_velodyne.launch
3. roscd velodyne_pointcloud/launch --> vim cloud_nodelet.launch
######################################################################################

######################################################################################
Show robot model in rviz:
1. comment out rviz code in demo_backpack_2d_localization.launch
2. launch demo_backpack_2d_localization.launch / amcl.launch first
3. roslaunch husky_description description_new.launch
4. rviz

######################################################################################
Laser scan --> pointcloud & False laser scan matching detection:

1. Transform the laser scan into pointcloud: 
(1) cd icp_ws/devel --> source setup.bash
(2) cd /home/williamwoo/icp_ws/src/2d_map_fusion/launch/ --> roslaunch 2d_map_fusion oicp_ros_2d.launch

2. Save the pointcloud as .pcd file: rosrun pcl_ros pointcloud_to_pcd input:=/map_2d_node/edge_cloud1 _prefix:=/home/williamwoo/..._
   生成的点云坐标x,y是反的！！ 需要将屏幕中央放到 点云起点位置，然后确认点云（0,0）的位置。
   pcl_ros地址：/opt/ros/kinetic/share/pcl_ros
3. Calculate the distance between the real-time laser scan and pointcloud: 
   cd icp_ws/src/py_cp/src
   ./py_cp.py
4. 

#########################
sgd_icp:
1. cd catkin_ws_sgd_icp/src/bin --> ./align_pcd /home/williamwoo/S1_B4_2d.pcd /home/williamwoo/S1-B4-online1_0.pcd /home/williamwoo/catkin_ws_sgd_icp/src/config.json
修改.json文件来制定初始变换关系

#########################
PCL viewer:
1. pcl_viewer /.../xxx.pcd

######################################################################################

查找某个具体的文件：
$ ls /xxx/xxx/xxxx | grep -i xxxxxxx



######################################################################################

ORB-SLAM2 (stereo camera, 明星电脑):
1. roscore
2. cd /zy_ws/devel --> source setup.bash --> cd ..
3. rosrun ORB_SLAM2 Stereo /home/lukewen/zy_ws/src/ORB_SLAM2/Vocabulary/ORBvoc.txt /home/lukewen/zy_ws/src/ORB_SLAM2/Examples/Stereo/ZED_vga.yaml true
4. rosrun image_transport republish compressed in:=/camera/left/image_raw raw out:=/camera/left/image_raw
   rosrun image_transport republish compressed in:=/camera/right/image_raw raw out:=/camera/right/image_raw
5. rosbag play --pause V1_01_easy.bag

######################################################################################


######################################################################################
ouster-ros驱动

1. sensor_hostname 要改为 os-122212001338.local
2. metadata 要改为 /home/cartin-wzy/catkin_ws_ouster/src/ouster-ros/ouster-sdk/tests/metadata/2_0_rc2_os-992011000121-32U0_legacy.json
3. source devel/setup.bash 后 (roslaunch ouster_ros sensor.launch)
4. 启动Fast-LIO2（catkin_ws）: roslaunch fast_lio mapping_ouster32.launch

######################################################################################


######################################################################################
启动usfxmax磁力计的步骤：

1. 打开单片机的开关 
2. 打开catkin_ws_ch343的driver (https://github.com/WCHSoftGroup/ch343ser_linux)
3. sudo chmod a+rw /dev/ttyACM0 或者 /ttyUSB0 /dev/ttyCH343USB0, 然后（catkin_ws) rosrun lmio mag_array_serial
(4. sudo minicom -s --> serial port setup --> 改Serial Device)
5. rostopic echo /MagPoints 看有没有数据
######################################################################################


sudo apt-get install ros-melodic-serial
